<?php
function neticrm_event_stat_civicrm_searchTasks($objectType, &$tasks){
  static $executed;
  if($objectType=="event" && !$executed){
    // breadcrumbs
    if($_GET['status']){
      $breadcrumb = array();
      $breadcrumb[] = l('Home', '<front>');
      $breadcrumb[] = l(t('CiviEvent Dashboard'),  'civicrm/event', array('html' => true, 'query' => 'reset=1'));
      $breadcrumb[] = l(t('Participants'), 'civicrm/event/search', array('html' => true, 'query' => 'reset=1&force=1&event='.$_GET['event']));
      drupal_set_breadcrumb($breadcrumb);

    }
    if(is_numeric($_GET['event'])&& $_GET['event']){
      $event_id = $_GET['event'];
      $sql = "SELECT p.contact_id, c.sort_name, (
        SELECT count(pp.id)FROM {civicrm_participant} pp WHERE pp.contact_id = p.contact_id AND pp.is_test = 0
      )as times
      FROM {civicrm_participant} p
      LEFT JOIN {civicrm_contact} c ON c.id = p.contact_id
      WHERE p.event_id = %d AND p.is_test = 0 
      ORDER BY times DESC";

      $result = db_query($sql, $event_id);
      while($r = db_fetch_object($result)){
        $calc['total']++;
        if($r->times > 1){
          //How many people attend many times?
          $calc['attended']++;
          if($calc['attended'] < 7){
            $calc['attendee'][$r->sort_name] = $r->times;
          }
        }
      }
      $calc['first'] = $calc['total'] - $calc['attended'];
      $pie = array();
      $pie[] = array(t('type'), t('count'));
      $pie[] = array(t('First time'), $calc['first']);
      $pie[] = array(t('Attended Before'), $calc['attended']);

      $bar = array();
      $bar[] = array(t('Participant'),t('Count'));
      if($calc['attended']>=1){
        foreach($calc['attendee'] as $n => $t){
          $bar[] = array($n, (int)$t);
        }
      }
      $setting = array(
        'neticrm_event_stat'=> array(
          'event' => $event_id,
          'pie' => $pie,
          'bar' => $bar,
        ),
      );

        
      drupal_set_html_head('<script type="text/javascript" src="//www.google.com/jsapi"></script>');
      drupal_add_js(drupal_get_path('module', 'neticrm_event_stat'). '/sugar.min.js');
      drupal_add_js(drupal_get_path('module', 'neticrm_event_stat'). '/neticrm_event_stat.js');
      drupal_add_css(drupal_get_path('module', 'neticrm_event_stat'). '/neticrm_event_stat.css');


      /** 
       * Part two: 
       * Count how many participants each status.
       */
      $params = array(
        'version' => 3,
        'id' => $event_id,
      );
      $result = civicrm_api('event', 'get', $params);
      $event = $result['count'] ? reset($result['values']) : array();
      $summary = array(
        'finished' => array(), 
        'unfinished' => array(), 
        'space' => $event['max_participants'] ? $event['max_participants'] : 0,
      );

      $finished = CRM_Event_PseudoConstant::participantStatus('', 'is_counted = 1', 'label');
      $unfinished = CRM_Event_PseudoConstant::participantStatus('', 'is_counted = 0', 'label');
      $setting['neticrm_event_stat']['state'] = array();
      foreach ($finished as $key => $value) {
        $setting['neticrm_event_stat']['state'][$key] = array('name' => $value,'isfinish' => 'finished');
      }
      foreach ($unfinished as $key => $value) {
        $setting['neticrm_event_stat']['state'][$key] = array('name' => $value,'isfinish' => 'unfinished');
      }

      $sql = "SELECT id, status_id FROM civicrm_participant WHERE event_id = %1 AND is_test = 0";
      $query = CRM_Core_DAO::executeQuery($sql, array(1 => array($event_id, 'Integer')));
      $participant_status = array();
      while($query->fetch()){
        $participant_status[$query->id] = $query->status_id;
      }
      if(!empty($participant_status)){
        $participant_count = CRM_Event_BAO_Participant::totalEventSeats(array_keys($participant_status), TRUE);
        foreach($participant_count as $pid => $count){
          $status_id = $participant_status[$pid];
          if(isset($finished[$status_id])){
            $summary['finished'][$finished[$status_id]] += $count;
          }
          else{
            $summary['unfinished'][$unfinished[$status_id]] += $count;
          }
        }
      }

      /**
       * Throw setting variable to javascript.
       */
      $setting['neticrm_event_stat']['summary'] = $summary;

      $setting['neticrm_event_stat']['translate'] = array(
        'Counted' => t('Counted'),
        'Not Counted' => t('Not Counted'),
        'Place Available' => t('Place Available'),
      );


      drupal_add_js($setting, 'setting', 'header');

    }
    $executed = TRUE;
  }
}
