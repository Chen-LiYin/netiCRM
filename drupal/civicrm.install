<?php

/*
 +--------------------------------------------------------------------+
 | CiviCRM version 3.3                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2010                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

define( 'CIVICRM_DIRECTORY_SEPARATOR', DIRECTORY_SEPARATOR );

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2010
 * $Id$
 *
 */

function civicrm_install( ) {
  // got to doing real install here.
  // prepare variables first.
  $crm_root = rtrim(dirname(__FILE__), "/drupal");
  $conf_path = conf_path();
  global $db_url;
  $include_path = '.'.PATH_SEPARATOR.$crm_root.PATH_SEPARATOR.$crm_root.'/packages'.PATH_SEPARATOR.get_include_path();
  set_include_path( $include_path );

  // step 1: import databases
  require_once "$crm_root/packages/DB.php";
  if(is_array($db_url)){ // this should be another trick to detect active db_url
    $dsn = str_replace("mysqli", "mysql", $db_url['default'])."?new_link=true";
  }
  else{
    $dsn = str_replace("mysqli", "mysql", $db_url)."?new_link=true";
  }

  $success = _civicrm_import_sql( $dsn, $crm_root.'/sql/civicrm.mysql');
  if($success){
    _civicrm_import_sql( $dsn, $crm_root.'/sql/civicrm_data.zh_TW.mysql');
    _civicrm_import_sql( $dsn, $crm_root.'/sql/civicrm_acl.zh_TW.mysql');
  }

  // step 2: create file directory
  // Oh we can't create civicrm directory here. Leave it for initialize auto create script.
  file_check_directory(file_create_path('civicrm'), FILE_CREATE_DIRECTORY);
  file_check_directory(file_create_path('civicrm/templates_c'), FILE_CREATE_DIRECTORY);
  file_check_directory(file_create_path('civicrm/upload'), FILE_CREATE_DIRECTORY);
  file_check_directory(file_create_path('civicrm/persist'), FILE_CREATE_DIRECTORY);
  file_check_directory(file_create_path('civicrm/custom'), FILE_CREATE_DIRECTORY);

  // step 3: copy civicrm.settings.php to correct directory
  $filename = $crm_root.'/templates/CRM/common/civicrm.settings.php.tpl';
  file_put_contents("$conf_path/civicrm.settings.php", file_get_contents($filename));
  drupal_set_message("CiviCRM for Drupal Installation Successful.");
}

/**
 * Implementation of hook_uninstall( )
 */
function civicrm_uninstall( ) {
    require_once 'civicrm.module';

    if ( ! civicrm_initialize( ) ) {
        return;
    }

    require_once 'CRM/Core/Config.php';
    $config =& CRM_Core_Config::singleton();

    require_once 'CRM/Core/DAO.php';
    CRM_Core_DAO::dropAllTables( );
}

/**
 * Helper function for import sql
 */
function _civicrm_import_sql($dsn, $fileName){
  $db =& DB::connect( $dsn );
  if(PEAR::isError( $db )) {
    watchdog("civicrm", "Cannot open $dsn: " . $db->getMessage( ) );
    return FALSE;
  }
  $string = file_get_contents( $fileName );

  // change \r\n to fix windows issues
  $string = str_replace("\r\n", "\n", $string );

  //get rid of comments starting with # and --
  $string = preg_replace("/^#[^\n]*$/m",   "\n", $string );
  $string = preg_replace("/^(--[^-]).*/m", "\n", $string );

  $queries  = preg_split('/;$/m', $string);
  foreach ( $queries as $query ) {
    $query = trim( $query );
    if ( ! empty( $query ) ) {
      $res =& $db->query( $query );
      if ( PEAR::isError( $res ) ) {
        watchdog("civicrm", "Cannot execute $query: " . $res->getMessage( ) );
        return FALSE;
      }
    }
  }
  return TRUE;
}


function civicrm_enable( ) {
    menu_rebuild( );
    menu_link_maintain( 'civicrm', 'delete', 'civicrm', 'CiviCRM' );
    
    $options = array(
                     'link_title' => 'CiviCRM',
                     'link_path'  => 'civicrm/dashboard',
                     'module'     => 'civicrm',
                     'options'    => array( 'alter' => true )
                     );
    menu_link_save( $options );

    if ( ! civicrm_initialize( ) ) {
        return;
    }

    // also invoke civicrm menu rebuild
    require_once 'CRM/Core/Menu.php';
    CRM_Core_Menu::store( );

    //Update the 'blocks' DB table with the blocks
    _block_rehash();
}
