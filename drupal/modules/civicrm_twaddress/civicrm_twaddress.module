<?php
/**
 * Implementation of hook_civicrm_buildForm().
 */
function civicrm_twaddress_civicrm_buildForm($formName, &$form) {
  static $add;
  // we don't support outside of civicrm yet
  if(arg(0) != 'civicrm'){
    return;
  }
  //
  $enable = TRUE;
  $form_name = $form->_attributes['name'];
  foreach ($form->_elements as $k => $e) {
    $name = $e->_attributes['name'];
    if(strstr($name, 'postal_code')){
      $override['zipName']['key'] = $name;
      $override['zipName']['default'] = $form->getElement($name)->_findValue($form->_defaultValues);
    }
    if(strstr($name, 'state_province')){
      $override['countyName']['key'] = $name;
      foreach($e->_options as $v){
        if($v['attr']['value']){
          $county_options[$v['attr']['value']] = $v['text'];
        }
      }
      $default = $form->getElement($name)->_findValue($form->_defaultValues);
      $override['countyName']['default'] = $county_options[$default];
      $form->_elements[$k]->_label = '縣市';
    }
    if(strstr($name, 'city')){
      $label = $form->getElement($name)->_label;
      $default = $form->getElement($name)->_findValue($form->_defaultValues);
      $form->removeElement($name);
      $form->addElement('select', $name, '鄉鎮市區', array( 0=>'鄉鎮市區'));
      $override['areaName']['key'] = $name;
      $override['areaName']['default'] = $default;
    }
    if(strstr($name, 'country')){
      $enable = FALSE;
    }
  }

  if(count($override)>=3 && $enable){
    if(!$add){
      /*
      if(arg(0) != 'civicrm'){
        drupal_add_js( 'var cj = jQuery.noConflict(); $ = cj;', 'inline' );
      }
      */
      $path = drupal_get_path("module",'civicrm_twaddress');
      drupal_add_js($path."/twzipcode.js");
      $add = 1;
    }
    foreach($county_options as $v => $l){
      $cjs .= 'county['.$v.']="'.$l.'";'."\n";
    }
    $js = '
    var county = new Array();
    '.$cjs.'
    function getcounty(n){
      return county[n] ? county[n] : n;
    }
    cj(document).ready(function(){
      cj("form[name='.$form_name.']").twzipcode({
        zipName:"'.$override['zipName']['key'].'",
        countyName:"'.$override['countyName']['key'].'",
        areaName:"'.$override['areaName']['key'].'",
        zipSel:"'.$override['zipName']['default'].'",
        countySel:"'.$override['countyName']['default'].'",
        areaSel:"'.$override['areaName']['default'].'"
      });

      var x;
      for(x in county){
        var county_name = county[x];
        var county_id = x;
        cj("select[name=\''.$override['countyName']['key'].'\'] option[value=\'"+county_name +"\']").each(function(){
          $(this).val(county_id);
        });
      }
    });
    ';
    drupal_add_js($js , 'inline');
  }
}

/**
 * Implementation of hook_civicrm_postProcess()
 */
function civicrm_twaddress_civicrm_postProcess($formName, &$form){
  foreach($form->_elementIndex as $n => $i){
    if(strstr($n, 'city')){
      $city = $form->getElement($n);
      if(is_array($_POST['address'])){
        $addr = $_POST['address'];
      }
      else{
        $city_value = $city->_findValue($_POST);
        $addr = array(1=> array(
          'location_type_id' => 1,
          'city' => $city_value,
        ));
      }
      break;
    }
  }
  if(!empty($addr)){
    foreach($addr as $i => $a){
      foreach($a as $name => $value){
        if(!strstr($name ,'city') && $name != 'location_type_id'){
          unset($addr[$i][$name]);
        }
      }
    }
    global $civicrm_root;
    require_once 'api/v2/Location.php';
    $params = array(
      'version' => '3.0',
      'contact_id'    => $form->_contactId,
      'address'     => $addr
    );
    $location =& civicrm_location_update( $params );
  } 
}
