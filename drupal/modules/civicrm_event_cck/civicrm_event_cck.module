<?php

function civicrm_event_cck_menu(){
  $items['admin/settings/civicrm_event_cck'] = array(
    'title' => 'CiviCRM Event Sync',
    'description' => 'Auto create CiviCRM event when updating specific content type.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('civicrm_event_cck_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configurations'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function civicrm_event_cck_admin_settings(){
  $types = node_get_types('names');
  $form['civicrm_event_cck_enabled_type'] = array(
    '#type' => 'checkboxes',
    '#title' => 'Content type to enable for sync',
    '#default_value' => variable_get('civicrm_event_cck_enabled_type', array()),
    '#options' => $types,
    '#required' => TRUE,
  );

  return $form;
}

function civicrm_event_cck_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL){
  $available_types = variable_get('civicrm_event_cck_enabled_type', array());
  if($op == 'view' && in_array($node->type, $available_types)){
  }
  if($op == 'insert' && in_array($node->type, $available_types)){
    // call event api here. http://wiki.civicrm.org/confluence/display/CRMDOC33/Event+APIs
  }
  if($op == 'update' && in_array($node->type, $available_types)){
    // call event api here. http://wiki.civicrm.org/confluence/display/CRMDOC33/Event+APIs
  }
}

function civicrm_event_cck_form_alter(&$form, &$form_state, $form_id){
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] . '_node_form' == $form_id){
    $available_types = variable_get('civicrm_event_cck_enabled_type', array());
    if(in_array($form['#node']->type, $available_types)) {
      // add drop down select list of "event type" and "attender type"

    }
  }
}
