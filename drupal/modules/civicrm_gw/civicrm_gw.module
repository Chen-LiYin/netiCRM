<?php
/**
 * Implementation of hook_init()
 */
function civicrm_gw_init(){
  $path = drupal_get_path('module', 'civicrm_gw');
  drupal_add_css("$path/civicrm_gw.css");

  if(strstr($_GET['q'], 'civicrm_gw')){
    $GLOBALS['conf']['cache'] = FALSE;
  }
}

/**
 * Implementation of hook_menu()
 */
function civicrm_gw_menu(){
  return array(
    'gw/ipn' => array(
      'access callback' => true,
      'page callback' => 'civicrm_gw_ipn',
      'type' => MENU_CALLBACK,
      'weight' => 0,
      'file' => 'civicrm_gw.ipn.inc',
    ),
  );
}


function civicrm_gw_error(){
  $msg = $_SESSION['gw']['error'];
  if(!count($msg)){
    drupal_access_denied();
  }
  $output .= '<div class="gw-error">';
  $output .= '<div class="gw-error-first">'.array_shift($msg).'</div>';
  foreach($msg as $m){
    $items[] = $m;
  }
  $output .= theme('item_list', $items);
  $output .= '</div>';
  return $output;
}

/**
 * Implementation of hook_civicrm_buildForm()
 */
/*
function civicrm_gw_civicrm_buildForm($form_name, &$form){
  switch($form_name){
    case 'CRM_Contribute_Form_Contribution_ThankYou':
      if(isset($_POST['final_result'])){
        if($_POST['final_result'] == 1 && $_POST['final_return_PRC'] == 0 && $_POST['final_return_SRC'] == 0){
          // success here
        }
        else{
          // error handling here
          require_once "CRM/Core/Payment/NewwebResponse.php";
          $e = new CRM_Core_Payment_NewwebResponse;
          $prc = $_POST['final_return_PRC'];
          $src = $_POST['final_return_SRC'];
          $brc = $_POST['final_return_BankRC'];
          $order_num = $_POST['P_OrderNumber'];
          $error = $e->response($prc,$src,$brc, $order_num);
          // simulate message
          $_SESSION['newweb']['error'] = $error;
          drupal_goto('civicrm_gw_error', "id=$order_num");
        }
      }
      break;
    case 'CRM_Contribute_Form_Contribution_Main':
      // add newweb payment method selection
      require_once "CRM/Core/DAO.php";
      if($form->_paymentProcessor['payment_processor_type'] == 'Newweb'){
        unset($_SESSION['newweb']);
        unset($_SESSION['newweb_form']);
        $dao = CRM_Core_DAO::executeQuery("SELECT id FROM civicrm_payment_processor_type WHERE name LIKE 'Newweb'");
        $dao->fetch();
        $ppt_id = $dao->id;
        $dao = CRM_Core_DAO::executeQuery("SELECT * FROM civicrm_option_value WHERE filter = $ppt_id AND is_active = 1");
        $default = 'Credit Card';
        $radios[1] = array('name' => $default, 'label' => ts($default));
        while($dao->fetch()){
          $radios[$dao->value] = array('name'=> $dao->name, 'label' => ts($dao->label), 'description' => $dao->description);

        }
        $form->addElement('hidden', 'newweb_instrument_id', 1);
        drupal_add_js(_civicrm_gw_js_form($radios), 'inline');
      }
      break;
  }
}
*/

/**
 * Implementation of hook_civicrm_pageRun
 */
function civicrm_gw_civicrm_pageRun( &$page ) {
    // You can assign variables to the template using:
    // $page->assign( 'varName', $varValue );
    // in your template, {$varName} will output the contents of $varValue
    // you should customize your template if doing so

// $page->assign( 'varName', 'This is a variable assigned by the hook' );
}

  

/**
 * Implementation of hook_cron()
 */
function civicrm_gw_cron(){
  // we don't need cron, yet
}

/**
 * Helper function for CiviCRM
 */
function _civicrm_gw_js_redirect(){
  $js = '
$(document).ready(function(){
  $("#redirect-form").submit();
});
';
  drupal_add_js($js, 'inline');
}

/* we don't need multiple payment yet.
function _civicrm_gw_js_form($radios){
  $output = "<div class='section'>";
  $output .= "<div class='label'>".ts('Payment Instrument').'</div>';
  $output .= "<div class='content'>";
  foreach($radios as $value => $radio){
    $checked = $value == 1 ? "checked='checked'" : '';
    $radio['description'] = str_replace(array("\n","\r"), array('',''), $radio['description']);
    $output .= "<div class='newweb-dummy-wrapper'><label><input type='radio' name='newweb_dummy' value='".$value."' class='form-radio' $checked />".$radio['label']."</label><div class='hover-item'>".$radio['description']."</div></div>";
  }
  $output .= '</div>';
  $output .= "<div class='clear'></div>";
  $output .= '</div>';
  return '
$(document).ready(function(){
  // add radios
  $("#crm-container form[name=Main] #intro_text").after("'.$output.'");
  // modified exists recurring input

  $("input[name=newweb_dummy]").click(function(){
    var v = $(this).val();
    $("input[name=newweb_instrument_id]").val(v);
    if(v != 1){
      $("#crm-container input[name=is_recur][value=0]").click();
      $("#crm-container input[name=is_recur][value=1]").attr("disabled","disabled");
    }
    else{
      $("#crm-container input[name=is_recur][value=1]").removeAttr("disabled");
    }
  });
  
  $(".hover-item").css({position:"absolute",display:"none"});
  $(".newweb-dummy-wrapper").hover(function(){
    $(this).children(".hover-item").show();
  },function(){
    $(this).children(".hover-item").hide();
  });
});  
  ';
}
*/

function _civicrm_gw_instrument(){
  return array(
    'Credit Card' => array('label' => '信用卡', 'desc' => '', 'code' => 'Credit Card'),
    'Virtual ATM' => array('label' => '轉帳（ATM/銀行）', 'desc' => '', 'code' => 'vacc'),
    '' => array('label' => '轉帳（ATM/銀行）', 'desc' => '', 'code' => 'vacc'),
    'Web ATM' => array('label' => 'Web ATM', 'desc' => '', 'code' => 'web_atm'),
    'Convenient Store' => array('label' => '便利商店', 'desc'=>'', 'code' => 'barcode'),
    'Convenient Store (Code)' => array('label'=>'便利商店 (代碼)','desc' => '', 'code' => 'ibon'),
  );
}
