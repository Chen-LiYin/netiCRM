<?php
/**
 * Implementation of hook_init
 */
function civicrm_neweb_init(){
  $path = drupal_get_path('module', 'civicrm_neweb');
  drupal_add_css("$path/civicrm_neweb.css");

  if(strstr($_GET['q'], 'neweb/ipn')){
    $GLOBALS['conf']['cache'] = FALSE;
  }
}

/**
 * Implementation of hook_menu
 */
function civicrm_neweb_menu(){
  return array(
    'neweb/ipn' => array(
      'access callback' => true,
      'page callback' => 'civicrm_neweb_ipn',
      'type' => MENU_CALLBACK,
      'file' => 'civicrm_neweb.extern.inc',
    ),
    'civicrm/contribute/recurring_nw' => array(
      'title' => 'Neweb Recurring contribution management',
      'access arguments' => array('edit contributions'),
      'page callback' => 'civicrm_neweb_recurring_page',
      'type' => MENU_CALLBACK,
      'file' => 'civicrm_neweb.pages.inc',
    ),
  );
}

/**
 * Implementation of hook_civicrm_buildForm()
 */
function civicrm_neweb_civicrm_buildForm($form_name, &$form){
  switch($form_name){
    case 'CRM_Contribute_Form_Contribution_Main':
      // add neweb payment method selection
      drupal_add_js(_civicrm_neweb_js_form(), 'inline');
      break;
    case 'CRM_Contribute_Form_Contribution_ThankYou':
      // credit card
      if(isset($_POST['final_result'])){
        if($_POST['final_result'] == 1 && $_POST['final_return_PRC'] == 0 && $_POST['final_return_SRC'] == 0){
          drupal_set_message(t("Success. Thank you."));
        }
        else{
          // error here
          require_once('civicrm_neweb.extern.inc');
          $prc = $_POST['final_return_PRC'];
          $src = $_POST['final_return_SRC'];
          $brc = $_POST['final_return_BankRC'];
          $error = civicrm_neweb_response($prc, $src, $brc);
          drupal_set_message(implode("<br>", $error), 'error');
        }
      }
      break;
    case 'CRM_Contribute_Form_ContributionPage_Amount':
      _civicrm_neweb_js_contritweak();
      break;
    case 'CRM_Admin_Form_PaymentProcessor':
      if($form->_defaultValues['payment_processor_type'] == 'Neweb'){
        $default = array(
          'ftp_host' => '',
          'ftp_user' => '',
          'ftp_password' => '',
        );
        $ftp = variable_get('civicrm_neweb_ftp', $default);
        _civicrm_neweb_js_payment($ftp, 0);
        $ftp_test = variable_get('civicrm_neweb_ftp_test', $default);
        _civicrm_neweb_js_payment($ftp_test, 1);
      }
      break;
  }
}

/**
 * Implementation of hook_postProcess()
 */
function civicrm_neweb_civicrm_postProcess($form_name, &$form){
  if($form_name == 'CRM_Admin_Form_PaymentProcessor'){
    $default = array(
      'ftp_host' => '',
      'ftp_user' => '',
      'ftp_password' => '',
    );
    foreach($default as $k => $v){
      if($_POST[$k]) $default[$k] = $_POST[$k];
      if($_POST['test_'.$k]) $default_test[$k] = $_POST['test_'.$k];
    }
    variable_set("civicrm_neweb_ftp", $default);
    variable_set("civicrm_neweb_ftp_test", $default_test);
  }
}

/**
 * Implementation of hook_cron()
 */
function civicrm_neweb_cron(){
  require_once("civicrm_neweb.cron.inc");
  module_load_include("inc", 'civicrm_neweb', 'civicrm_neweb.cron');
  $is_test = 1;
  $hour = date('G');
  $now = time();
  $yesterday = $now - 86400;
  _civicrm_neweb_process_all($is_test, $now, $hour, $yesterday);
  $is_test = 0;
  _civicrm_neweb_process_all($is_test, $now, $hour, $yesterday);
}


function _civicrm_neweb_process_all($is_test, $now, $hour, $yesterday){
  // recurring contributions
  $test = $is_test ? '_test' : '';
  if($hour >= 19 && $hour <= 23 && variable_get('civicrm_neweb_response'.$test, 0) < $yesterday){
    // get yesterday modification result
    if(civicrm_neweb_process_response($is_test)){
      variable_set('civicrm_neweb_response'.$test, $now);
    }
  }
  if($hour >= 11 && $hour <= 15 && variable_get('civicrm_neweb_transaction'.$test, 0) < $yesterday){
    // get yesterday transaction result
    if(civicrm_neweb_process_transaction($is_test)){
      variable_set('civicrm_neweb_transaction'.$test, $now);
    }
  }
  if($hour >= 9 && $hour <= 15 && variable_get('civicrm_neweb_uploaded'.$test, 0) < $yesterday){
    // doing upload stuff
    if(civicrm_neweb_process_upload($is_test)){
      variable_set('civicrm_neweb_uploaded'.$test, $now);
    }
  }

  // ezpay contributions
  if($now - variable_get('civicrm_neweb_ezpay', 0) > 7200){
    civicrm_neweb_process_ezpay($is_test, $now);
    variable_set('civicrm_neweb_ezpay'.$test, $now);
  }
}

/**
 * Correction recurring contribution only for credit card.
 */
function _civicrm_neweb_js_form(){
  return '
$(document).ready(function(){
  $("input[name=civicrm_instrument_id_dummy]").click(function(){
    var v = $(this).val();
    if(v != 1){
      $("#crm-container input[name=is_recur][value=0]").click();
      $("#crm-container input[name=is_recur][value=1]").attr("disabled","disabled");
    }
    else{
      $("#crm-container input[name=is_recur][value=1]").removeAttr("disabled");
    }
  });
});  
  ';
}
function _civicrm_neweb_js_contritweak(){
  $js = '
$(document).ready(function(){
  $("input[name=\'recur_frequency_unit[week]\']").hide();
  $("label[for=\'recur_frequency_unit[week]\']").hide();
  $("input[name=\'recur_frequency_unit[day]\']").hide();
  $("label[for=\'recur_frequency_unit[day]\']").hide();
  $("input[name=\'recur_frequency_unit[year]\']").hide();
  $("label[for=\'recur_frequency_unit[year]\']").hide();
  $("#is_recur").click(function(){
    $("#is_recur_interval").attr( "checked", false );
  });
  $("#is_recur_interval").parents("tr").hide();

});  
';
  drupal_add_js($js, 'inline', 'footer');
}
function _civicrm_neweb_js_payment($default, $is_test){
  $element = $is_test ? 'crm-paymentProcessor-form-block-test_url_recur' : 'crm-paymentProcessor-form-block-url_recur';
  $test = $is_test ? 'test_' : '';
  $js = '
cj(document).ready(function(){
  var def= new Object();
  def = '.drupal_to_js($default).';
  var e = "'.$element.'";
  var test = "'.$test.'";
  var main = "tr."+e;
  var $new = new Object();
  $new.ftp_password = $(main).clone();
  $new.ftp_user = $(main).clone();
  $new.ftp_host = $(main).clone();

  for(var i in $new){
    var $o = $new[i];
    $o.find(".helpicon").remove();
    $o.find("label").attr("for", test+i).text(i.replace("_", " "));
    $o.find("input").attr("name", test+i).val("");
    $o.find("input").val(def[i]);
    $o.removeClass().addClass("crm-paymentProcessor-form-block-"+test+i);
    cj($o).insertAfter(main);
  }
});  
';
  drupal_add_js($js, 'inline', 'footer');
}

function _civicrm_neweb_instrument(){
  return array(
    'Credit Card' => array('label' => '信用卡', 'description' => ''),
    'ATM' => array('label' => 'ATM 轉帳', 'description' => ''),
    'Web ATM' => array('label' => '網路 ATM', 'description' => ''),
    'Convenient Store' => array('label' => '超商條碼繳費', 'description'=>''),
    'Convenient Store (Code)' => array('label'=>'超商代碼繳費','desc' => ''),
    'Alipay' => array('label' => '支付寶', 'description' => ''),
  );
}

